{"version":3,"sources":["components/users/users.jsx","axios-users.jsx","components/user/user.jsx","components/home/home.jsx","components/newuser/newuser.jsx","components/login/login.jsx","App.js","serviceWorker.js","index.js"],"names":["users","props","react_default","a","createElement","className","name","instance","axios","create","baseURL","user","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userData","_this2","get","match","params","id","then","res","setState","data","email","Component","home","usersData","test","fetchOrders","key","push","objectSpread","map","i","Link","to","components_users_users","newuser","username","handleNameChange","bind","assertThisInitialized","handleUsernameChange","handleEmailChange","handleSubmit","event","target","value","preventDefault","post","onSubmit","type","onChange","responseFacebook","response","console","log","isLoggedIn","picture","url","componentClicked","responseGoogle","googleName","profileObj","givenName","gpicture","imageUrl","userID","gname","fbContent","facebook_login_with_button_default","appId","autoLoad","fields","onClick","callback","src","google_login_default","clientId","buttonText","onSuccess","onFailure","App","NavLink","exact","activeClassName","Switch","Route","path","component","Newuser","Login","Home","User","Boolean","window","location","hostname","app","BrowserRouter","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.271c20a8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './users.css';\n\nconst users = (props) => {\n\treturn(\n\t\t<div className=\"users\">\n\t\t\t<b>{props.name}</b>\n\t\t</div>\n\t);\n}\n\nexport default users;","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL:'https://test-9515d.firebaseio.com/'\n});\n\nexport default instance;\n","import React,{ Component } from 'react';\nimport axios from '../../axios-users';\n\nclass user extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuserData:[]\n\t\t}\n\t}\t\n\n\tcomponentDidMount(){\n\t\taxios.get('https://test-9515d.firebaseio.com/users/'+this.props.match.params.id+'.json')\n\t\t\t.then((res) => this.setState({userData:res.data}))\t\t\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h4>User Details</h4>\n\t\t\t\t<p>{this.state.userData.name}</p>\n\t\t\t\t<p>{this.state.userData.email}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default user;","import React,{ Component } from 'react';\nimport axios from 'axios';\nimport { Route, Link } from 'react-router-dom';\n\nimport './home.css';\nimport Users from '../users/users';\nimport User from '../user/user';\n\nclass home extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusersData:[],\n\t\t\ttest:{}\n\t\t}\n\t}\t\n\n\tcomponentDidMount(){\n\t\taxios.get('https://test-9515d.firebaseio.com/users.json')\n\t\t\t.then((res) => {\n\t\t\t\tconst fetchOrders = [];\n\t\t\t\tfor(let key in res.data){\n\t\t\t\t\tfetchOrders.push({\n\t\t\t\t\t\t...res.data[key],\n\t\t\t\t\t\tid:key\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setState({usersData:fetchOrders});\n\t\t\t});\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"home\">\n\t\t\t\t\n\t\t\t\t{this.state.usersData.map((res,i) => <Link to={\"/\"+res.id}  key={i}>\n\t\t\t\t\t<Users name={res.name} className=\"users\" />\n\t\t\t\t</Link>)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default home;","import React,{ Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios';\n\nclass newuser extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tusername:'',\n\t\t\temail:''\n\t\t};\n    \tthis.handleNameChange = this.handleNameChange.bind(this);\n    \tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\n    \tthis.handleEmailChange = this.handleEmailChange.bind(this);\n    \tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\t\n\n\thandleNameChange(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\thandleUsernameChange(event) {\n\t\tthis.setState({username: event.target.value});\n\t}\n\n\thandleEmailChange(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\t\t\n\n\thandleSubmit(event) {\n\t\t// alert('A name was submitted: ' + this.state.value);\n\t\tevent.preventDefault();\n\t\taxios.post('https://test-9515d.firebaseio.com/users.json',\n\t\t\t{\tname:this.state.name,\n\t\t\t\tusername:this.state.username,\n\t\t\t\temail:this.state.email\n\t\t\t}\n\t\t)\n\t}\t\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{false? <Redirect to=\"/login\" />:null}\n\t\t\t\t<h4>New User</h4>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\tName:\n\t\t\t\t\t<input type=\"text\" value={this.state.value} onChange={this.handleNameChange} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\tUser Name:\n\t\t\t\t\t<input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\tEmail:\n\t\t\t\t\t<input type=\"text\" value={this.state.email} onChange={this.handleEmailChange} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default newuser;","import React,{ Component } from 'react';\nimport axios from '../../axios-users';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\n\nclass user extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoggedIn:false,\n\t\t\tuserID:'',\n\t\t\tname:'',\n\t\t\temail:'',\n\t\t\tpicture:'',\n\t\t\tgname:'',\n\t\t\tgpicture:''\n\t\t}\n\t}\t\n\n\tresponseFacebook = response => {\n\t\tconsole.log(response)\n\t\tthis.setState({isLoggedIn:true,name:response.name,picture:response.picture.data.url})\n\t}\n\n\tcomponentClicked = () => {\n\t\tconsole.log('clicked');\n\t}\n\n\tresponseGoogle = response => {\n\t\tconsole.log(response);\n\t\tthis.setState({googleName:response.profileObj.givenName,gpicture:response.profileObj.imageUrl})\n\t}\n\n\trender(){\t\n\n\t\tlet fbContent;\n\n\t\tif(this.state.isLoggedIn){\n\t\t\tfbContent = null;\n\t\t}\n\t\telse{\n\t\t\tfbContent=(\n\t\t\t\t<FacebookLogin\n\t\t\t\t    appId=\"394732927768812\"\n\t\t\t\t    autoLoad={true}\n\t\t\t\t    fields=\"name,email,picture\"\n\t\t\t\t    onClick={this.componentClicked}\n\t\t\t\t    callback={this.responseFacebook} />\t\n\t\t\t);\t    \t\t\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{fbContent}\n\t\t\t\t<p>{this.state.name}</p>\n\t\t\t\t<img src={this.state.picture} />\n\t\t\t\t<p>{this.state.googleName}</p>\n\t\t\t\t<img src={this.state.gpicture} />\n\t\t\t\t<GoogleLogin\n\t\t\t\t\tclientId=\"341529182538-lut1n6vudrk7tc3hcglaff8q9n8na08j.apps.googleusercontent.com\"\n\t\t\t\t\tbuttonText=\"Login\"\n\t\t\t\t\tonSuccess={this.responseGoogle}\n\t\t\t\t\tonFailure={this.responseGoogle}\n\t\t\t\t/>\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default user;\n\n","import React, { Component } from 'react';\nimport {Route, NavLink, Switch} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './components/home/home';\nimport Newuser from './components/newuser/newuser';\nimport User from './components/user/user';\nimport Login from './components/login/login';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\n\t\t}\n\t}\n\n\trender() { \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<NavLink to=\"/\" exact activeClassName=\"active\" className=\"headerLinks\">Home</NavLink>\n\t\t\t\t\t<NavLink to=\"/newuser\" activeClassName=\"active\" className=\"headerLinks\">New User</NavLink>\n\t\t\t\t\t<NavLink to=\"/login\" activeClassName=\"active\" className=\"headerLinks\">Login</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/newuser\" exact component={Newuser} />\n\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\t\t\t\t\n\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/:id\" exact component={User} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst app = <BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}